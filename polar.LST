C51 COMPILER V9.01   POLAR                                                                 12/06/2016 17:32:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE POLAR
OBJECT MODULE PLACED IN polar.OBJ
COMPILER INVOKED BY: C:\Applications\Keil\C51\BIN\C51.EXE polar.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***********************************************************************
   2          * 
   3          * 时    间：2008-10-9
   4          *
   5          * 文 件 名：polar.c
   6          *
   7          * 版    本：AKD10P07(发布版)
   8          *
   9          * 作    者：北京爱科迪信息通讯技术有限公司―技术部―杨淳雯
  10          * 
  11          * 功能说明：极化转动函数
  12          *
  13          ***********************************************************************/
  14          #include "c8051f120.h"
  15          #include "station.h"
  16          #include "adc.h"
  17          #include "timer.h"
  18          #include "antenna.h"
  19          #include "polar.h"
  20          #include "rweeprom.h"
  21          
  22          
  23          UINT16 xdata PolarFlag = 0;             //极化是否可转动标志
  24          UINT16 xdata PloarNormal = 0;   //极化正常标志
  25          UINT8 xdata PloarAngleStage = 0;         //极化角所处台阶
  26          UINT16 tempmin = 4000;
  27          UINT16 tempmax = 0;
  28          UINT8 maxnumber = 0;
  29          UINT8 minnumber = 0;
  30          UINT8 maxflag = 0;
  31          UINT8 minflag = 0;
  32          UINT8 initplorangle = 0;
  33          
  34          /***********************************************************************
  35          *
  36          * 函数原型：void GotoPolarAngle(float angle)
  37          *
  38          * 入口参数：目标角度
  39          *
  40          * 出口参数：无
  41          *
  42          * 功能描述：转到目标极化角度
  43          *
  44          * 注    意：PolarDst全局变量!!!
  45          *
  46          ***********************************************************************/
  47          void GotoPolarAngle(float angle)
  48          {
  49   1              if((PolarFlag == 0) && \
  50   1                      ((ReadEEPROM(PolCompensateAddress) == '+') || \
  51   1                      (ReadEEPROM(PolCompensateAddress) == '-')))
  52   1              {
  53   2                      PolarFlag = 2;
  54   2                      if(ReadEEPROM(PolCompensateAddress) == '+')
  55   2                      {
C51 COMPILER V9.01   POLAR                                                                 12/06/2016 17:32:34 PAGE 2   

  56   3                              AngleCom = ReadEEPROM(PolCompensateAddress + 1);
  57   3                      }
  58   2                      if(ReadEEPROM(PolCompensateAddress) == '-')
  59   2                      {
  60   3                              AngleCom = 0.0 - ReadEEPROM(PolCompensateAddress + 1);
  61   3                      }
  62   2              }
  63   1      
  64   1              PolarFlag = 2;                                                                   //2012
  65   1      
  66   1              if(PolarFlag == 2)
  67   1              {
  68   2                      PolarRightFlag = 0;                             //极化角未到位
  69   2      //*----------------------------------------------------------------
  70   2      //              if(angle < -90.0)                                       //保护
  71   2      //              {
  72   2      //                      angle = -90.0;
  73   2      //              }
  74   2      //              if(angle > 90.0)
  75   2      //              {
  76   2      //                      angle = 90.0;
  77   2      //              }
  78   2      //---------------------------------------------------------------*/
  79   2                      PolarDst = angle;
  80   2      //---------------------------------------------------------------*/
  81   2      
  82   2                      OpenTimer0Interrupt();
  83   2                      OpenTimer2Interrupt();
  84   2                      while(PolarRightFlag == 0 && OverflowT0 < 5000)
  85   2                      {
  86   3                              ;
  87   3                      }
  88   2                      POLAR_STOP;
  89   2                      CloseTimer2Interrupt();
  90   2                      CloseTimer0Interrupt();
  91   2                      if(OverflowT0 > 4999)
  92   2                      {
  93   3                              PloarNormal = 0;
  94   3                      }
  95   2                      else
  96   2                      {
  97   3                              PloarNormal = 1;
  98   3                      }
  99   2              }
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
